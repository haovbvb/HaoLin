//
//  MDLXZoneView.m
//  HaoLin
//
//  Created by apple on 14-8-20.
//  Copyright (c) 2014年 hlsd. All rights reserved.
//

#import "MDLXZoneView.h"

@interface MDLXZoneView()
{
    MDLbasicdataobj   *basicdataobj;
    MDLNetworkservice *service;
    ZYPObjectManger   *zypobjectmanger;
    
}
@property(nonatomic ,retain)MDLgoodsdata *goosdata;
@property(nonatomic ,retain)NSMutableArray *selectedArray;

@end


@implementation MDLXZoneView

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
}
    return self;
}

-(void)awakeFromNib
{
    
    _completebtn.layer.borderWidth = 1;
    [_completebtn.layer setMasksToBounds:YES];
    [_completebtn.layer setCornerRadius:5.0];
//    _completebtn.layer.borderColor = [UIColor darkGrayColor].CGColor;
    _completebtn.layer.borderColor = [UIColor whiteColor].CGColor;
    [self.self.lestitm setBackgroundImage:[UIImage imageNamed:@"ShuLiangzhuangtaizuo@2x"] forState:(UIControlStateNormal)];
    self.fanweibtn.backgroundColor =[UIColor orangeColor];
    [_fanweibtn.layer setMasksToBounds:YES];
    [_fanweibtn.layer setCornerRadius:5.0];
    _fanweibtn.layer.borderWidth = 1;
    _fanweibtn.layer.borderColor = BGColor.CGColor;
    
    self.chazhaobtn.backgroundColor=[UIColor orangeColor];
    [_chazhaobtn.layer setMasksToBounds:YES];
    [_chazhaobtn.layer setCornerRadius:5.0];
    _chazhaobtn.layer.borderWidth = 1;
    _chazhaobtn.layer.borderColor = BGColor.CGColor;
    
    self.fenleiview.hidden=YES;
    self.selectedArray = [[NSMutableArray alloc] init];
    [self inittable];
    [self quanxuanbtn];
    
    //请求单例
    service =[MDLNetworkservice shareservice];
    
    //获取登陆数据单例
    zypobjectmanger=[ZYPObjectManger shareInstance];
    basicdataobj =[MDLbasicdataobj sharebasicdataobj];
    
    self.subviewarry =[[NSMutableArray alloc]init];
    
    _tablearry =[[NSMutableArray alloc]init];
    
//    [[NSNotificationCenter defaultCenter] addObserver:self
//                                             selector:@selector(quanbuNotification)
//                                                name:@"tableviewreloadData"
//                                               object:nil];
    
     _searchbar.delegate=self;
    [_searchbar setAutocapitalizationType:UITextAutocapitalizationTypeNone];
    [_searchbar sizeToFit];
    _searchbar.autocapitalizationType=UITextAutocapitalizationTypeSentences;
    
    [self requsetdata];
    self.catid=[[felerarry objectAtIndex:0]objectForKey:@"cat_id"];
    NSLog(@"catid:%@",self.catid);
    [self goosrequsetdata];
    
    [self bringSubviewToFront:_fenleiview];
    [self bringSubviewToFront:_subtableview];
    NOK =YES;
    COOL =YES;
    self.count=1;
}
-(void)quanxuanbtn
{
    UIView *view =[[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 40)];
    view.backgroundColor=BGColor;
    
    self.qbLable=[[UILabel alloc]init];
    _qbLable.text =@"全选";
    _qbLable.frame=CGRectMake(40, view.frame.origin.x+10, 40, 20);
    [view addSubview:_qbLable];
    
    self.iamgeView =[[UIImageView alloc]initWithFrame:CGRectMake(8, view.frame.origin.x+10, 18, 18)];
    _iamgeView.image=[UIImage imageNamed:@"MDLuncheck2@2x"];
    _iamgeView.backgroundColor=[UIColor whiteColor];
    [view addSubview:_iamgeView];
    
    UIButton *qxbtn=[UIButton buttonWithType:UIButtonTypeCustom];
    qxbtn.frame=CGRectMake(5, 8, 100, 25);
    qxbtn.backgroundColor=[UIColor clearColor];
    [qxbtn addTarget:self action:@selector(quanxuan) forControlEvents:UIControlEventTouchUpInside];
    [view addSubview:qxbtn];
    self.JYtableview.tableHeaderView=view;
    NICK=YES;
}
//完成按钮点击事件
- (IBAction)comple:(id)sender {

}

- (void) mytest:(NSNotification*) notification
{
    id index=[[notification object] objectForKey:@"row"];
    NSLog(@"index%@",index);
}

#pragma mark - searchbar-Delegate
- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar
{
    return YES;
}
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    self.searctext = searchText;
}
- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
{
    [self search];
    [_searchbar resignFirstResponder];
}
#pragma mark - searchbar-Delegate-END

- (IBAction)findbtn:(id)sender {
    
    [self search];
    [self.searchbar resignFirstResponder];
}
#pragma mark - searchbar 搜索
-(void)search
{
    if ([self.searctext length] > 0) {
        [_tablearry removeAllObjects];
        ZYPNetWorkGetSourceManger *manger = [[ZYPNetWorkGetSourceManger alloc] init];
        ZYPObjectManger *object = [ZYPObjectManger shareInstance];
        NSString *urlString = [NSString stringWithFormat:@"%@user_id=%@&tokenid=%@&goods_name=%@",goodsList,object.loginInObject.user_id,object.loginInObject.tokenid,self.searctext];
        NSLog(@"urlString:%@",urlString);
        [manger connectWithUrlStr:urlString completion:^(id responedObject) {
            if ([responedObject isKindOfClass:[NSDictionary class]]) {
                NSDictionary *dic = responedObject;
                NSArray *array = [dic objectForKey:@"data"];
//                NSLog(@"array:%@",array);
                for (NSMutableDictionary *data in  array) {
                    
                    MDLgoodsdata *goodsdata=[[MDLgoodsdata alloc]init];
                    goodsdata.goodsid=[data objectForKey:@"goods_id"];
                    goodsdata.goodsname=[data objectForKey:@"goods_name"];
                    goodsdata.goodsprice=[data objectForKey:@"goods_price"];
                    [_tablearry addObject:goodsdata];
                    
                }
                [self.JYtableview reloadData];

            }
        }];
    }
}

//#pragma mark UISearchBar and UISearchDisplayController Delegate Methods
//-(BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar{
//    //準備搜尋前，把上面調整的TableView調整回全屏幕的狀態，如果要產生動畫效果，要另外執行animation代碼
//    self.JYtableview.frame = CGRectMake(300, 115, 320, self.JYtableview.frame.size.height);
//    return YES;
//}
//-(BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar{
//    //搜尋結束後，恢復原狀，如果要產生動畫效果，要另外執行animation代碼
//    self.JYtableview.frame = CGRectMake(0, 115, 320, self.JYtableview.frame.size.height);
//    return YES;
//}

//********************** 请求数据 ************************

//大分类-数据
-(void)requsetdata
{
    [service Connectdafenlei:zypobjectmanger.loginInObject.user_id tokenid:zypobjectmanger.loginInObject.tokenid withJSON:^(id responseObject) {
        NSMutableDictionary *dic =responseObject;
        NSLog(@"%@",[dic objectForKey:@"message"]);
        //将数据添加到数组中
        if ([[dic objectForKey:@"code"] isEqualToString:@"0"]&&[[dic objectForKey:@"data"] count]) {
            NSMutableArray *arry =[dic objectForKey:@"data"];
            felerarry=[arry copy];
            for (NSDictionary *dic1 in  arry) {
                MDLXuanzeshangpin *xuanze=[[MDLXuanzeshangpin alloc]init];
                xuanze.cat_id     =[dic1 objectForKey:@"cat_id"];
                xuanze.cat_name   =[dic1 objectForKey:@"cat_name"];
                xuanze.cat_pid    =[dic1 objectForKey:@"cat_pid"];
                xuanze.createtime =[dic1 objectForKey:@"createtime"];
                [_subviewarry addObject:xuanze];
            }
            [self reloadtableview];
            
        }

    }];
}
-(void)reloadtableview
{
    [self.subtableview reloadData];
}

-(void)goosrequsetdata:(MDLXuanzeshangpin *)obj
{
//    MDLInformation *Information =[[MDLInformation alloc]init];
    [_tablearry removeAllObjects];
    [service ConnectToobtaindic:zypobjectmanger.loginInObject.user_id tokenid:zypobjectmanger.loginInObject.tokenid catid:obj.cat_id page:nil withJSON:^(id responseObject) {
        NSMutableDictionary *dic =responseObject;
        NSLog(@"分类下的商品%@",dic);
        NSLog(@"%@",[dic objectForKey:@"message"]);
        NSMutableArray *goosarry=[dic objectForKey:@"data"];
    if ([[dic objectForKey:@"code"] isEqualToString:@"0"]&&[[dic objectForKey:@"data"] count]) {
        for (id data in goosarry) {
            MDLgoodsdata *goodsdata=[[MDLgoodsdata alloc]init];
            goodsdata.goodsid      =[data objectForKey:@"goods_id"];
            goodsdata.goodsname    =[data objectForKey:@"goods_name"];
            goodsdata.goodsprice   =[data objectForKey:@"goods_price"];
            [_tablearry addObject:goodsdata];
            NSLog(@"goodsdata:%@",goodsdata);
            NSLog(@"_tablearry:%@",_tablearry);
//            Information.goodsubarry=[_tablearry copy];
//            NSLog(@"Information.goodsubarry:%@",Information.goodsubarry);
            
        }
        [self.JYtableview reloadData];

      }
        self.fenleiview.hidden=YES;
    }];
}

-(void)goosrequsetdata
{
    
    [service ConnectToobtaindic:zypobjectmanger.loginInObject.user_id tokenid:zypobjectmanger.loginInObject.tokenid catid:@"1" page:nil withJSON:^(id responseObject) {
        NSMutableDictionary *dic =responseObject;
        NSLog(@"%@",[dic objectForKey:@"message"]);
        NSMutableArray *goosarry=[dic objectForKey:@"data"];
        if ([[dic objectForKey:@"code"] isEqualToString:@"0"]&&[[dic objectForKey:@"data"] count]) {
            for (id data in goosarry) {
                MDLgoodsdata *goodsdata=[[MDLgoodsdata alloc]init];
                goodsdata.goodsid=[data objectForKey:@"goods_id"];
                goodsdata.goodsname=[data objectForKey:@"goods_name"];
                goodsdata.goodsprice=[data objectForKey:@"goods_price"];
                [_tablearry addObject:goodsdata];
            } [self.JYtableview reloadData];
        }
    }];
}

-(void)inittable
{
    self.JYtableview=[[UITableView alloc]initWithFrame:CGRectMake(0, 109, KDeviceWidth, KDeviceHeight-100) style:UITableViewStylePlain];
    _JYtableview.delegate = self;
    _JYtableview.dataSource =self;
    [self addSubview:_JYtableview];
    
}

#pragma mark - UITableViewDelegate

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    if (tableView==_subtableview) {
        return 1;
    }if (tableView==_JYtableview) {
        return 1;
    }
    return 1;

}

//-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
//{
//    if (tableView==_subtableview) {
//        return 0;
//    }if (tableView==_JYtableview) {
//        return 0;
//    }
//    return 0;
//}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    if (tableView ==_subtableview) {
        return [_subviewarry count];

    }else if (tableView==_JYtableview){
        return [self.tablearry count];
    }
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView==_subtableview) {
        return 30;
    }if (tableView==_JYtableview) {
        return 60;
    }
    return 0;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (tableView==_subtableview) {
        
        static NSString *CellIdentifier = @"subCell";
        
        UITableViewCell *acell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        if (acell == nil) {
            acell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
//            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
//            cell.selectionStyle=UITableViewCellSelectionStyleNone;
            MDLXuanzeshangpin *xuanzeobj=[_subviewarry objectAtIndex:indexPath.row];
            acell.textLabel.text=xuanzeobj.cat_name;
//            self.catid          =xuanzeobj.cat_id;
            
        }  return acell;

    } if (tableView==_JYtableview) {
        
        static NSString *CellIdentifier = @"MDLWuPinTableViewCell";
        
        MDLWuPinTableViewCell *cell= (MDLWuPinTableViewCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        if (cell == nil)
        {
            cell= (MDLWuPinTableViewCell *)[[[NSBundle  mainBundle]  loadNibNamed:@"MDLWuPinTableViewCell" owner:self options:nil]  lastObject];
            cell.selectionStyle=UITableViewCellEditingStyleNone;
            [cell.cellview.xuandingbtn setBackgroundImage:[UIImage imageNamed:@"MDLuncheck2@2x"] forState:UIControlStateNormal];
            [cell.cellview.xuandingbtn setBackgroundImage:[UIImage imageNamed:@"MDLxuanzhong@2x"] forState:UIControlStateSelected];
            }
//        for (UIView *v in cell.contentView.subviews) {
//            [v removeFromSuperview];
//        }
        MDLgoodsdata *goodsdata=[self.tablearry objectAtIndex:indexPath.row];
        
        cell.cellview.NameLable.text=goodsdata.goodsname;
        NSLog(@"--------%@",goodsdata.goodsname);
        cell.cellview.PriceLable.text=goodsdata.goodsprice;
        
        
//        MDLCellView *cellview=[[[NSBundle mainBundle]loadNibNamed:@"MDLCellView" owner:self options:nil]lastObject];
//        [cell.contentView addSubview:cellview];
//        cellview.count=self.count;
//        cellview.wupincell=cell;
        if (NICK==YES) {
            cell.cellview.xuandingbtn.selected = NO;
            [cell.cellview.bjimageview setImage:[UIImage imageNamed:@"MDLshuliangchangtai@2x"]];
            cell.cellview.Addbtn.enabled=NO;
            cell.cellview.Jianbtn.enabled=NO;
            
        }else if(NICK==NO){
            cell.cellview.xuandingbtn.selected = YES;
            [cell.cellview.bjimageview setImage:[UIImage imageNamed:@"MDLNumber@2x"]];
            cell.cellview.Addbtn.enabled=YES;
            cell.cellview.Jianbtn.enabled=YES;
        }
        [cell.cellview.xuandingbtn addTarget:self action:@selector(danxuan:) forControlEvents:UIControlEventTouchUpInside];
        cell.cellview.xuandingbtn.tag=indexPath.row;
        
        cell.cellview.NameLable.text=goodsdata.goodsname;
        cell.cellview.PriceLable.text=[NSString stringWithFormat:@"$%@",goodsdata.goodsprice];
        
        
        UIImage *addimage=[UIImage imageNamed:@"MDLNumberadd@2x"];
        [cell.cellview.Addbtn setBackgroundImage:addimage forState:UIControlStateNormal];
        [cell.cellview.Addbtn addTarget:self action:@selector(zengjia:)
                  forControlEvents:UIControlEventTouchUpInside];
        cell.cellview.Addbtn.tag=indexPath.row;
        
        UIImage *jianimage=[UIImage imageNamed:@"MDLNumberjian@2x"];
        [cell.cellview.Jianbtn setBackgroundImage:jianimage forState:UIControlStateNormal];
        [cell.cellview.Jianbtn addTarget:self action:@selector(jianshao:) forControlEvents:UIControlEventTouchUpInside];
        cell.cellview.Jianbtn.tag=indexPath.row;
        cell.cellview.NumberLable.tag=indexPath.row;
        
           return (UITableViewCell *)cell;
//        return cell;
         }
        return nil;
}
#pragma mark -tableview点击

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView==_subtableview) {
        MDLXuanzeshangpin *xuanze=[_subviewarry objectAtIndex:indexPath.row];
        self.catid=xuanze.cat_id;
        self.fanweibtn.titleLabel.text=xuanze.cat_name;
        [self goosrequsetdata:xuanze];
    }if (tableView==_JYtableview) {
        self.subtableview.hidden=YES;
        [self.searchbar resignFirstResponder];

    }
}
#pragma mark UITableViewDelegate End -

#pragma mark-点击事件

-(void)zengjia:(UIButton *)sender
{
//    MDLWuPinTableViewCell * cell = (MDLWuPinTableViewCell *)[[sender superview] superview];
    
    NSIndexPath *path = [NSIndexPath indexPathForRow:sender.tag inSection:0];
    MDLWuPinTableViewCell* cell=(MDLWuPinTableViewCell *)[_JYtableview cellForRowAtIndexPath:path];
//        self.count ++;
    NSString * lableNumber = cell.cellview.NumberLable.text;
    int lableCount = 1;
    if (!lableNumber || [lableNumber isEqualToString:@""]) {
    }else {
        lableCount = [lableNumber intValue]+1;
    }
        cell.cellview.NumberLable.text = [NSString stringWithFormat:@"%d",lableCount];
}

-(void)jianshao:(UIButton *)sender
{
    NSIndexPath *path = [NSIndexPath indexPathForRow:sender.tag inSection:0];
    MDLWuPinTableViewCell* cell=(MDLWuPinTableViewCell *)[_JYtableview cellForRowAtIndexPath:path];
    NSLog(@"sender.tag:%d",sender.tag);
    
    NSString * lableNumber = cell.cellview.NumberLable.text;
    int lableCount = 1;
    if (!lableNumber || [lableNumber isEqualToString:@""]) {
    }else {
        lableCount = [lableNumber intValue]-1;
        if (lableCount<1) {
            lableCount=1;
        }
    }
    cell.cellview.NumberLable.text = [NSString stringWithFormat:@"%d",lableCount];

    
//    if (_count<=1) {
//        _count=1;
//    }else {
//        self.count --;
//    }
//    cell.cellview.NumberLable.text = [NSString stringWithFormat:@"%d",self.count];
}
-(void)danxuan:(UIButton *)sender
{
    NSIndexPath *path = [NSIndexPath indexPathForRow:sender.tag inSection:0];
    MDLWuPinTableViewCell* cell=(MDLWuPinTableViewCell *)[_JYtableview cellForRowAtIndexPath:path];
    MDLgoodsdata *data = [self.tablearry objectAtIndex:sender.tag];
    if ([self.selectedArray containsObject:data]) {
        [self.selectedArray removeObject:data];
    }else {
        [self.selectedArray addObject:data];
        NSLog(@"selectedArray:%@",self.selectedArray);
    }
    //        MDLInformation *Information =[[MDLInformation alloc]init];
//    NSInteger index=sender.tag;
    //    NSMutableArray *arry=[Information.goodsubarry objectAtIndex:index];
    //    NSLog(@"arry:%@",arry);
    cell.cellview.xuandingbtn.selected = !cell.cellview.xuandingbtn.selected;
    if (!cell.cellview.xuandingbtn.selected) {
        
        [cell.cellview.bjimageview setImage:[UIImage imageNamed:@"MDLshuliangchangtai@2x"]];
        cell.cellview.Addbtn.enabled =NO;
        cell.cellview.Jianbtn.enabled=NO;
        cell.cellview.NumberLable.text=@"1";
        self.count=0;
        COOL=YES;
    } else {
        
        [cell.cellview.bjimageview setImage:[UIImage imageNamed:@"MDLNumber@2x"]];
        cell.cellview.Addbtn.enabled=YES;
        cell.cellview.Jianbtn.enabled=YES;
        COOL=NO;
    }
}

//选中全部button
-(void)quanxuan
{
    if (NICK==NO) {
        
        _iamgeView.image=[UIImage imageNamed:@"MDLuncheck2@2x"];
        _qbLable.textColor=[UIColor blackColor];
        [self.selectedArray removeAllObjects];
        NICK=YES;
    }else if(NICK==YES){
        [self.selectedArray addObjectsFromArray:self.tablearry];
        _iamgeView.image=[UIImage imageNamed:@"MDLxuanzhong@2x"];
        _qbLable.textColor=[UIColor orangeColor];
        
        NICK =NO;
    }
    [self.JYtableview reloadData];
}

//分类-全部button
- (IBAction)fenleixuanzebtn:(id)sender {
    
    if (NOK==NO) {
        _fenleiview.hidden=YES;
        _subtableview.hidden=YES;
        NOK=YES;
    }else if(NOK==YES){
        self.subtableview =[[UITableView alloc]initWithFrame:CGRectMake(0, 105, 100, 130)];
        _subtableview.delegate  =self;
        _subtableview.dataSource=self;
        [self addSubview:_subtableview];
        _fenleiview.hidden=NO;
        NOK =NO;
    }
}

- (IBAction)backitm:(id)sender
{
    
    [self.MDLJingyingViewController.navigationController popViewControllerAnimated:YES];
}

//自定义搜索取消button title
-(void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)controller{
    [self.searchbar setShowsCancelButton:YES animated:NO];
    UIView *topView = controller.searchBar.subviews[0];
    
    for (UIView *subView in topView.subviews) {
        if ([subView isKindOfClass:NSClassFromString(@"UINavigationButton")]) {
            UIButton *cancelButton = (UIButton*)subView;
            [cancelButton setTitle:@"取消" forState:UIControlStateNormal];
        }
    }
}


/*
 - (void)pressed:(id)sender {
 UITableViewCell * cell = (UITableViewCell *)[[sender superview] superview];
 NSIndexPath * path = [self.tableView indexPathForCell:cell];
 NSLog(@"index row%d", [path row]);
 //NSLog(@"view:%@", [[[sender superview] superview] description]);
 }
 
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end
