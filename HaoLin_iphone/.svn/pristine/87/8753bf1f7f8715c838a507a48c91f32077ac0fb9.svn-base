//
//  ZYPServeOrderDetailView.m
//  HaoLin
//
//  Created by mac on 14-9-24.
//  Copyright (c) 2014年 hlsd. All rights reserved.
//

#import "ZYPServeOrderDetailView.h"

@implementation ZYPServeOrderDetailView

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
    }
    return self;
}
- (void)awakeFromNib
{
    self.titleLabel.backgroundColor = ZYPBGColor;
    
    bottomView = [[[NSBundle mainBundle] loadNibNamed:@"ZYPServeOrderBottomView" owner:self options:nil] lastObject];
    if (IS_IPHONE_5) {
        self.frame = CGRectMake(0, 0, 320, 568);
        self.scrollView.frame = CGRectMake(0, 64, 320, 504);
        self.scrollView.contentSize = CGSizeMake(320, 560);
    }else
    {
        self.frame = CGRectMake(0, 0, 320, 480);
        self.scrollView.frame = CGRectMake(0, 64, 320, 416);
        self.scrollView.contentSize = CGSizeMake(320, 560);
    }
    [self getSource];
}

- (IBAction)back:(id)sender
{
    [self.detailVC.navigationController popViewControllerAnimated:YES];
}
- (void)getSource
{
    //  显示加载图标
    [MBProgressHUD showHUDAddedTo:self animated:YES];
    __weak ZYPServeOrderDetailView *detailVC = self;
    ZYPNetWorkGetSourceManger *manger = [[ZYPNetWorkGetSourceManger alloc] init];
    HSPAccount *acout = [HSPAccountTool account];
    NSString *urlString = [NSString stringWithFormat:@"%@user_id=%@&tokenid=%@&order_id=%@",orderDetailInfor,acout.user_id,acout.userTokenid,self.servrObject.order_id];
    [manger connectWithUrlStr:urlString completion:^(id respondObject) {
        NSLog(@"%@",respondObject);
        if ([respondObject isKindOfClass:[NSDictionary class]]) {
            NSDictionary *dic = respondObject;
            if ([[dic objectForKey:@"code"] isEqualToString:@"0"])
            {
                NSDictionary *dicSource = [dic objectForKey:@"data"];
                detailVC.orderDetailObject = [[ZYPOrderDetailObject alloc] initWithOrderDetailDic:dicSource];
                detailVC.userObject = [[ZYPUserObject alloc] initUserObjectWithDic:[dicSource objectForKey:@"userinfo"]];
                //  隐藏图标
                [MBProgressHUD hideAllHUDsForView:detailVC animated:YES];
                
                /**
                 *  延迟执行
                 */
                [self performSelector:@selector(tianxieInfo) withObject:nil afterDelay:0.5];
            }else
            {
                //  隐藏图标
                [MBProgressHUD hideAllHUDsForView:detailVC animated:YES];
                [detailVC alertWithMessage:@"加载失败"];
            }
        }
    }];
}
//  自定义alert
- (void)alertWithMessage:(NSString *)mesage
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:mesage message:nil delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
    [alert show];
}

- (void)tianxieInfo
{
    self.servePeopleLabel.text = [NSString stringWithFormat:@"收货人:%@",self.userObject.nickname];
    self.shouhuorenDIANhuAlABEL.text = self.userObject.mobile;
    self.serveAddressLabel.text = self.userObject.delevery_address;
    
    self.dingdanStateLabel.text = @"为服务";
    
    self.dingdanneirongLabel.text = self.orderDetailObject.order_desc;
    
    self.fueuFeiLabel.text = [NSString stringWithFormat:@"￥%@",self.orderDetailObject.real_price];
    self.dingdanshijianLabel.text = [self timeTranslate:self.orderDetailObject.createtime];
    self.dingdanbianhaoLabel.text = self.orderDetailObject.order_sn;
}
#pragma mark -时间戳时间转化
- (NSString *)timeTranslate:(NSString *)time
{
    //  将时间戳转化为时间
    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
    [formatter setDateStyle:NSDateFormatterMediumStyle];
    [formatter setDateFormat:@"YYYY-MM-dd hh:mm:ss"];
    NSDate *date1 = [NSDate dateWithTimeIntervalSince1970:[time intValue]];
    NSString *dateString = [formatter stringFromDate:date1];
    return dateString;
}


/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end
