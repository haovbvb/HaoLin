//
//  JZDSPartyViewController.m
//  HaoLin
//
//  Created by 姜泽东 on 14-8-11.
//  Copyright (c) 2014年 hlsd. All rights reserved.
//

#import "JZDSPartyViewController.h"
#define HunderParty 100

@interface JZDSPartyViewController ()<UITableViewDataSource,UITableViewDelegate,JZDModuleHttpRequestDelegate>
{
    NSMutableArray *_data;
    NSMutableArray *_deatilArray;
    JZDModuleHttpRequest *request;
    __block int page;
    JZDDistance *distance;
    HSPAccount *account;
}


@end

@implementation JZDSPartyViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        self.automaticallyAdjustsScrollViewInsets=NO;
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
//    NSLog(@"JZDSPartyViewController");
    self.navigationController.navigationBar.barTintColor=nil;
    _navBarSegment.frame=CGRectMake(70, 5, 180, 30);
    [self.navigationController.navigationBar addSubview:_navBarSegment];
    [self.navigationItem setLeftItemWithImage:[UIImage imageNamed:@"HSP_back_nom"] selectedImage:[UIImage imageNamed:@"HSP_back_down"] target:self action:@selector(back)];
    
    _data = [[NSMutableArray alloc] init];
    _deatilArray = [[NSMutableArray alloc] init];
    distance = [[JZDDistance alloc] init];
    account = [HSPAccountTool account];
   
    [self uiconfig];
    [self sendRequest];
}

-(void)sendRequest
{
    request=[JZDModuleHttpRequest sharedInstace];
}

-(void)requestFinished:(id)responseObject
{
    [self addData:responseObject];
}

-(void)addData:(id)responseObject
{
//    YYLog(@"responseObject==%@",responseObject);
    if ([responseObject isKindOfClass:[NSError class]]) {
        return;
    }
    if (![(NSArray *)[responseObject objectForKey:@"data"] count]) {
        JZDCustomAlertView *alert = [JZDCustomAlertView sharedInstace];
        [alert popAlert:@"没有数据"];
        return;
    }
    if ([[responseObject objectForKey:@"code"] isEqualToString:@"0"]&&[(NSArray *)[responseObject objectForKey:@"data"] count]) {
        for(NSDictionary *dic in [responseObject objectForKey:@"data"]){
            //获取详情页的group_id
            [_deatilArray addObject:[dic objectForKey:@"group_id"]];
            JZDItem *item=[[JZDItem alloc] init];
            item.doSomeThing=[dic objectForKey:@"group_subject"];
            item.location=[dic objectForKey:@"group_address"];
            item.farAway=[dic objectForKey:@"group_coord"];
            item.nickName=[dic objectForKey:@"nickname"];
            item.boyOrGirl=[dic objectForKey:@"gender"];
            //            //请求图片
            __weak JZDItem *myItem=item;
            [request getImageUrl:[dic objectForKey:@"headurl"] withImage:^(UIImage *img) {
                myItem.headImage=img;
                [_myPartyTableView reloadData];
            }];
            item.disTance=[distance jingdu:[dic objectForKey:@"group_jingdu_coord"] withWeidu:[dic objectForKey:@"group_weidu_coord"]];
            item.timeForNow=[dic objectForKey:@"group_addtime"];
            item.timeForStart=[dic objectForKey:@"group_partytime"];
            item.numberOfPeople=[dic objectForKey:@"group_man_num"];
            item.partyDescribe=[dic objectForKey:@"group_content"];
            [_data addObject:item];
        }
        [_myPartyTableView reloadData];
    }
}

-(void)requestFailed:(NSError *)error
{
    
}

-(void)uiconfig
{
    _navBarSegment.frame=CGRectMake(70, 5, 180, 30);
    [self.navigationController.navigationBar addSubview:_navBarSegment];
    [_myPartyTableView addHeaderWithTarget:self action:@selector(headerRereshing)];
    //自动刷新(一进入程序就下拉刷新)
    [_myPartyTableView headerBeginRefreshing];
    // 2.上拉加载更多(进入刷新状态就会调用self的footerRereshing)
    [_myPartyTableView addFooterWithTarget:self action:@selector(footerRereshing)];
}

-(void)headerRereshing
{
    __weak JZDSPartyViewController *wself=self;
    if (_navBarSegment.selectedSegmentIndex==0) {
        [request connectionRequestUrl:[NSString stringWithFormat:myPartyListUrl,account.user_id,1,account.userTokenid] withJSON:^(id responeJson) {
            [_data removeAllObjects];
            [_deatilArray removeAllObjects];
            [wself addData:responeJson];
        }];
    }else{
        [request connectionRequestUrl:[NSString stringWithFormat:joinPartyListUrl,account.user_id,1,account.userTokenid] withJSON:^(id responeJson) {
            [_data removeAllObjects];
            [wself addData:responeJson];
        }];
    }
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        // 刷新表格
        [_myPartyTableView reloadData];
        // (最好在刷新表格后调用)调用endRefreshing可以结束刷新状态
        [_myPartyTableView headerEndRefreshing];
    });
}

-(void)footerRereshing
{
    page++;
    __weak JZDSPartyViewController *wself=self;
    if (_navBarSegment.selectedSegmentIndex==0) {
        [request connectionRequestUrl:[NSString stringWithFormat:myPartyListUrl,account.user_id,page,account.userTokenid] withJSON:^(id responeJson) {
            [wself popAlert:responeJson];
            [wself addData:responeJson];
        }];
    }else{
        [request connectionRequestUrl:[NSString stringWithFormat:joinPartyListUrl,account.user_id,page,account.userTokenid] withJSON:^(id responeJson) {
            [wself popAlert:responeJson];
            [wself addData:responeJson];
        }];
    }
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        // 刷新表格
        [_myPartyTableView reloadData];
        // (最好在刷新表格后调用)调用endRefreshing可以结束刷新状态
        [_myPartyTableView footerEndRefreshing];
    });
}

-(void)popAlert:(id)responeJson
{
    __weak JZDCustomAlertView *alert=[JZDCustomAlertView sharedInstace];
    if ([[responeJson objectForKey:@"data"] isEqual:@""]) {
        [alert popAlert:[NSString stringWithFormat:@"目前只有%d页哦",page-1]];
    }
}

-(void)back
{
    [self dismissViewControllerAnimated:YES completion:nil];
}

#pragma mark - UITableViewDelegate
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [_data count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 130;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellId=@"cell";
    JZDPartyTableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:cellId];
    if (cell==nil) {
        cell=[[[NSBundle mainBundle] loadNibNamed:@"JZDPartyTableViewCell" owner:self options:nil] lastObject];
    }
    cell.jumpButton.tag = indexPath.row + HunderParty;
    [cell.jumpButton addTarget:self action:@selector(goDetailedParty:) forControlEvents:UIControlEventTouchUpInside];
    [cell setItem:[_data objectAtIndex:indexPath.row]];
    return cell;
}

// 进入Party详情
- (void)goDetailedParty:(UIButton *)btn
{
    HSPMyPartyDetailController *myParty=[[HSPMyPartyDetailController alloc] initWithNibName:@"HSPMyPartyDetailController" bundle:nil];
    myParty.thisUrlGroupId=[_deatilArray objectAtIndex:(btn.tag-HunderParty)];
    myParty.item = [_data objectAtIndex:(btn.tag - HunderParty)];
    [self.navigationController pushViewController:myParty animated:YES];
}

- (IBAction)selectSegmen:(UISegmentedControl *)sender {
    __weak JZDSPartyViewController *wself=self;
    if (sender.selectedSegmentIndex==1) {
        [request connectionRequestUrl:[NSString stringWithFormat:joinPartyListUrl,account.user_id,1,account.userTokenid] withJSON:^(id responeJson) {
            [_data removeAllObjects];
            [_myPartyTableView reloadData];
            if ([responeJson isEqual:[NSDictionary class]]) {
                YYLog(@"1");
            }
            [wself addData:responeJson];
        }];
        
    }else{
        [request connectionRequestUrl:[NSString stringWithFormat:myPartyListUrl,account.user_id,1,account.userTokenid] withJSON:^(id responeJson) {
            [_data removeAllObjects];
            [wself addData:responeJson];
        }];
    }
}



@end
